services:
  backend:
    build: ./
    ports:
      - "8000:8000"
    environment:
      - MYSQL_HOST=mysql
    depends_on:
      - mysql
      - mongo
    networks:
      - my_network

  mysql:
    image: mysql:8.0
    restart: always
    build:
      context: database
      dockerfile: Dockerfile
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: teste
    ports:
      - "3306:3306"
    networks:
      - my_network

  adminer:
    image: adminer:5.3.0
    ports:
      - 8080:8080
    networks:
      - my_network

  mongo:
    image: mongo
    restart: always
    volumes:
      - ./docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: teste
    ports:
      - 27017:27017
    networks:
      - my_network

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH: false
    networks:
      - my_network

networks:
  my_network:
    driver: bridge